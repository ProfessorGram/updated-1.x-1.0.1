<?php
/**
 * @file
 * Displays the last updated information for a node.
 */

/**
 * Implements hook_form_BASE_FORM_alter().
 */
function updated_form_node_type_form_alter(&$form, $form_values) {
  $form['display']['node_updated'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display last updated date.'),
    '#default_value' => variable_get('node_updated_' . $form['#node_type']->type, TRUE),
    '#description' => t('Last updated date will be displayed along with published date.'),
    '#states' => array(
      'visible' => array(   // action to take.
        ':input[name=node_submitted]' => array('checked' => TRUE),
      ),
    ),
  );
}

/**
 * Implements hook_form_BASE_FORM_alter().
 */
function updated_form_node_form_alter(&$form, $form_values) {
  if (variable_get('node_updated_' . $form['#node']->type, TRUE)) {
    // Add the updated date so authors can see it here.
    if (property_exists($form['#node'], 'changed')) {
      $form['author']['updated_value'] = array(
        '#type' => 'textfield',
        '#title' => t('Last updated'),
        '#value' => format_date($form['#node']->changed),
        '#disabled' => TRUE,
      );
    }
    if (property_exists($form['#node'], 'show_updated')) {
      $form['options']['show_updated'] = array(
        '#type' => 'checkbox',
        '#title' => t('Display updated date'),
        '#default_value' => $form['#node']->show_updated,
      );
    }
  }
}

/**
 * Implements hook_node_validate().
 */
function updated_node_validate($node, $form, &$form_state) {
  if (!empty($form_state['values']['updated_value'])) {
    // Remove the updated value added for editors to view.
    unset($form_state['values']['updated_value']);
  }
}

/**
 * Implelements hook_schema_alter().
 */
function updated_schema_alter(&$schema) {
  // Add show_updated field to existing node schema.
  $schema['node']['fields']['show_updated'] = array(
    'description' => 'Boolean indicating whether the node display the updated date in addition to the created date.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );
  // Add show_updated field to existing node_revision schema.
  $schema['node_revision']['fields']['show_updated'] = array(
    'description' => 'Boolean indicating whether the node display the updated date in addition to the created date.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  );
}

/**
 * Implements hook_preprocess_node().
 */
function updated_preprocess_node(&$variables) {
  if (variable_get('node_updated_' . $variables['node']->type, TRUE) && $variables['node']->show_updated) {
    $date = format_date($variables['node']->changed);
    $variables['submitted'] .= '&nbsp;&bull;&nbsp;<span>' . t('Updated on !date', array('!date' => $date)) . '</span>';
  }
}
